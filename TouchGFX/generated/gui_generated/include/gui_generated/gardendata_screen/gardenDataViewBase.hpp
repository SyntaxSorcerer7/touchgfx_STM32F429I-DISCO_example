/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GARDENDATA_VIEW_BASE_HPP
#define GARDENDATA_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/gardendata_screen/gardenDataPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/TextArea.hpp>

#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/historyRecord.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
class gardenDataViewBase : public touchgfx::View<gardenDataPresenter>
{
public:
    gardenDataViewBase();
    virtual ~gardenDataViewBase() {}

    virtual void setupScreen();

    virtual void tempHistoryUpdateItem(historyRecord& item, int16_t itemIndex)
    {
        // Override and implement this function in gardenData
    }

    virtual void humidityHistoryUpdateItem(historyRecord& item, int16_t itemIndex)
    {
        // Override and implement this function in gardenData
    }

    virtual void pressureHistoryUpdateItem(historyRecord& item, int16_t itemIndex)
    {
        // Override and implement this function in gardenData
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image bg;
    touchgfx::SwipeContainer swipeContainer1;
    touchgfx::Container overview;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextAreaWithOneWildcard tempText;
    touchgfx::TextAreaWithOneWildcard presText;
    touchgfx::TextAreaWithOneWildcard humidityText;
    touchgfx::BoxProgress progressWater;
    touchgfx::Image image1;
    touchgfx::TextArea txtoverview;

    touchgfx::Container tempHistoryView;
    touchgfx::BoxWithBorder boxWithBorder1_1;
    touchgfx::ScrollList tempHistory;
    touchgfx::DrawableListItems<historyRecord, 8> tempHistoryListItems;

    touchgfx::TextArea txthistory;

    touchgfx::Container humidityHistoryView;
    touchgfx::BoxWithBorder boxWithBorder1_1_1;
    touchgfx::ScrollList humidityHistory;
    touchgfx::DrawableListItems<historyRecord, 8> humidityHistoryListItems;

    touchgfx::TextArea txtHistoryHumidity;

    touchgfx::Container presureHistoryView;
    touchgfx::BoxWithBorder boxWithBorder1_1_1_1;
    touchgfx::ScrollList pressureHistory;
    touchgfx::DrawableListItems<historyRecord, 8> pressureHistoryListItems;

    touchgfx::TextArea txtHistoryPressure;


    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMPTEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar tempTextBuffer[TEMPTEXT_SIZE];
    static const uint16_t PRESTEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar presTextBuffer[PRESTEXT_SIZE];
    static const uint16_t HUMIDITYTEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar humidityTextBuffer[HUMIDITYTEXT_SIZE];

private:
    void updateItemCallbackHandler(DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    touchgfx::Callback<gardenDataViewBase, DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 4600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // GARDENDATA_VIEW_BASE_HPP
