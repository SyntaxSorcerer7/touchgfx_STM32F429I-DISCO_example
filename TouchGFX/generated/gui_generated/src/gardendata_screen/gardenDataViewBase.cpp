/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/gardendata_screen/gardenDataViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

gardenDataViewBase::gardenDataViewBase() :
    updateItemCallback(this, &gardenDataViewBase::updateItemCallbackHandler)
{
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    bg.setXY(0, 0);
    bg.setBitmap(Bitmap(BITMAP_BG_ID));

    swipeContainer1.setXY(0, 0);

    overview.setPosition(0, 0, 240, 320);

    boxWithBorder1.setPosition(0, 62, 240, 223);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1.setBorderSize(5);
    boxWithBorder1.setAlpha(84);
    overview.add(boxWithBorder1);

    tempText.setPosition(5, 85, 230, 35);
    tempText.setColor(touchgfx::Color::getColorFrom24BitRGB(97, 97, 97));
    tempText.setLinespacing(0);
    Unicode::snprintf(tempTextBuffer, TEMPTEXT_SIZE, "%s", TypedText(T_SINGLEUSEID17).getText());
    tempText.setWildcard(tempTextBuffer);
    tempText.setTypedText(TypedText(T_SINGLEUSEID16));
    overview.add(tempText);

    presText.setPosition(5, 120, 230, 35);
    presText.setColor(touchgfx::Color::getColorFrom24BitRGB(97, 97, 97));
    presText.setLinespacing(0);
    Unicode::snprintf(presTextBuffer, PRESTEXT_SIZE, "%s", TypedText(T_SINGLEUSEID19).getText());
    presText.setWildcard(presTextBuffer);
    presText.setTypedText(TypedText(T_SINGLEUSEID18));
    overview.add(presText);

    humidityText.setPosition(5, 155, 230, 35);
    humidityText.setColor(touchgfx::Color::getColorFrom24BitRGB(97, 97, 97));
    humidityText.setLinespacing(0);
    Unicode::snprintf(humidityTextBuffer, HUMIDITYTEXT_SIZE, "%s", TypedText(T_SINGLEUSEID21).getText());
    humidityText.setWildcard(humidityTextBuffer);
    humidityText.setTypedText(TypedText(T_SINGLEUSEID20));
    overview.add(humidityText);

    progressWater.setXY(99, 216);
    progressWater.setProgressIndicatorPosition(2, 2, 100, 10);
    progressWater.setRange(0, 100);
    progressWater.setDirection(AbstractDirectionProgress::RIGHT);
    progressWater.setBackground(Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_SMALL_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
    progressWater.setColor(touchgfx::Color::getColorFrom24BitRGB(84, 144, 186));
    progressWater.setValue(60);
    progressWater.setAlpha(158);
    overview.add(progressWater);

    image1.setXY(12, 198);
    image1.setBitmap(Bitmap(BITMAP_GROWTH_ID));
    image1.setAlpha(110);
    overview.add(image1);

    txtoverview.setXY(12, 19);
    txtoverview.setColor(touchgfx::Color::getColorFrom24BitRGB(214, 214, 214));
    txtoverview.setLinespacing(0);
    txtoverview.setTypedText(TypedText(T_SINGLEUSEID99));
    overview.add(txtoverview);
    swipeContainer1.add(overview);

    tempHistoryView.setPosition(0, 0, 240, 320);

    boxWithBorder1_1.setPosition(0, 62, 240, 223);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1.setBorderSize(5);
    boxWithBorder1_1.setAlpha(84);
    tempHistoryView.add(boxWithBorder1_1);

    tempHistory.setPosition(7, 67, 228, 208);
    tempHistory.setHorizontal(false);
    tempHistory.setCircular(false);
    tempHistory.setEasingEquation(EasingEquations::backEaseOut);
    tempHistory.setSwipeAcceleration(10);
    tempHistory.setDragAcceleration(10);
    tempHistory.setNumberOfItems(15);
    tempHistory.setPadding(0, 0);
    tempHistory.setSnapping(false);
    tempHistory.setDrawableSize(30, 0);
    tempHistory.setDrawables(tempHistoryListItems, updateItemCallback);
    tempHistoryView.add(tempHistory);

    txthistory.setXY(12, 19);
    txthistory.setColor(touchgfx::Color::getColorFrom24BitRGB(214, 214, 214));
    txthistory.setLinespacing(0);
    txthistory.setTypedText(TypedText(T_SINGLEUSEID100));
    tempHistoryView.add(txthistory);
    swipeContainer1.add(tempHistoryView);

    humidityHistoryView.setPosition(0, 0, 240, 320);

    boxWithBorder1_1_1.setPosition(0, 62, 240, 223);
    boxWithBorder1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1_1.setBorderSize(5);
    boxWithBorder1_1_1.setAlpha(84);
    humidityHistoryView.add(boxWithBorder1_1_1);

    humidityHistory.setPosition(7, 67, 228, 208);
    humidityHistory.setHorizontal(false);
    humidityHistory.setCircular(false);
    humidityHistory.setEasingEquation(EasingEquations::backEaseOut);
    humidityHistory.setSwipeAcceleration(10);
    humidityHistory.setDragAcceleration(10);
    humidityHistory.setNumberOfItems(15);
    humidityHistory.setPadding(0, 0);
    humidityHistory.setSnapping(false);
    humidityHistory.setDrawableSize(30, 0);
    humidityHistory.setDrawables(humidityHistoryListItems, updateItemCallback);
    humidityHistoryView.add(humidityHistory);

    txtHistoryHumidity.setXY(12, 19);
    txtHistoryHumidity.setColor(touchgfx::Color::getColorFrom24BitRGB(214, 214, 214));
    txtHistoryHumidity.setLinespacing(0);
    txtHistoryHumidity.setTypedText(TypedText(T_SINGLEUSEID101));
    humidityHistoryView.add(txtHistoryHumidity);
    swipeContainer1.add(humidityHistoryView);

    presureHistoryView.setPosition(0, 0, 240, 320);

    boxWithBorder1_1_1_1.setPosition(0, 62, 240, 223);
    boxWithBorder1_1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1_1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1_1_1.setBorderSize(5);
    boxWithBorder1_1_1_1.setAlpha(84);
    presureHistoryView.add(boxWithBorder1_1_1_1);

    pressureHistory.setPosition(7, 67, 228, 208);
    pressureHistory.setHorizontal(false);
    pressureHistory.setCircular(false);
    pressureHistory.setEasingEquation(EasingEquations::backEaseOut);
    pressureHistory.setSwipeAcceleration(10);
    pressureHistory.setDragAcceleration(10);
    pressureHistory.setNumberOfItems(15);
    pressureHistory.setPadding(0, 0);
    pressureHistory.setSnapping(false);
    pressureHistory.setDrawableSize(30, 0);
    pressureHistory.setDrawables(pressureHistoryListItems, updateItemCallback);
    presureHistoryView.add(pressureHistory);

    txtHistoryPressure.setXY(12, 19);
    txtHistoryPressure.setColor(touchgfx::Color::getColorFrom24BitRGB(214, 214, 214));
    txtHistoryPressure.setLinespacing(0);
    txtHistoryPressure.setTypedText(TypedText(T_SINGLEUSEID102));
    presureHistoryView.add(txtHistoryPressure);
    swipeContainer1.add(presureHistoryView);

    swipeContainer1.setPageIndicatorBitmaps(Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID), Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID));
    swipeContainer1.setPageIndicatorXY(90, 300);
    swipeContainer1.setSwipeCutoff(50);
    swipeContainer1.setEndSwipeElasticWidth(50);
    swipeContainer1.setSelectedPage(0);

    add(bg);
    add(swipeContainer1);
}

void gardenDataViewBase::setupScreen()
{
    tempHistory.initialize();
    for (int i = 0; i < tempHistoryListItems.getNumberOfDrawables(); i++)
    {
        tempHistoryListItems[i].initialize();
    }
    humidityHistory.initialize();
    for (int i = 0; i < humidityHistoryListItems.getNumberOfDrawables(); i++)
    {
        humidityHistoryListItems[i].initialize();
    }
    pressureHistory.initialize();
    for (int i = 0; i < pressureHistoryListItems.getNumberOfDrawables(); i++)
    {
        pressureHistoryListItems[i].initialize();
    }
}

void gardenDataViewBase::updateItemCallbackHandler(DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &tempHistoryListItems)
    {
        Drawable* d = items->getDrawable(containerIndex);
        historyRecord* cc = (historyRecord*)d;
        tempHistoryUpdateItem(*cc, itemIndex);
    }
    else if (items == &humidityHistoryListItems)
    {
        Drawable* d = items->getDrawable(containerIndex);
        historyRecord* cc = (historyRecord*)d;
        humidityHistoryUpdateItem(*cc, itemIndex);
    }
    else if (items == &pressureHistoryListItems)
    {
        Drawable* d = items->getDrawable(containerIndex);
        historyRecord* cc = (historyRecord*)d;
        pressureHistoryUpdateItem(*cc, itemIndex);
    }
}
