// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0x6f3e4a60
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _a[];
extern const unsigned char _bg[];
extern const unsigned char _blue_pageindicator_dot_indicator_small_highlight[];
extern const unsigned char _blue_pageindicator_dot_indicator_small_normal[];
extern const unsigned char _blue_progressindicators_bg_small_progress_indicator_bg_square_0_degrees[];
extern const unsigned char _growth[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _a, 0, 240, 320, 0, 0, 240, 320, touchgfx::Bitmap::RGB565 },
    { _bg, 0, 240, 320, 0, 0, 240, 320, touchgfx::Bitmap::RGB565 },
    { _blue_pageindicator_dot_indicator_small_highlight, 0, 15, 15, 3, 3, 9, 9, touchgfx::Bitmap::ARGB8888 },
    { _blue_pageindicator_dot_indicator_small_normal, 0, 15, 15, 3, 3, 9, 9, touchgfx::Bitmap::ARGB8888 },
    { _blue_progressindicators_bg_small_progress_indicator_bg_square_0_degrees, 0, 104, 14, 0, 0, 104, 14, touchgfx::Bitmap::RGB565 },
    { _growth, 0, 64, 64, 26, 50, 19, 1, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

